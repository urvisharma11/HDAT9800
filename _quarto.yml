project:
  type: website
  output-dir: docs
  
website:
  title: "Urvi's HDAT 9800 Journey"
  navbar:
    right:
      - about.qmd
      - icon: github
        href: https://github.com/
      - icon: twitter
        href: https://twitter.com
format:
  html:
    theme:
      - cosmo
      - brand
    css: styles.css

editor: visual

# Chapter 3



## Loading libraries

```{r}
library(dplyr)

library(ggplot2)
library(nycflights13)
dim(flights)
head(flights)
glimpse(flights)
```

 

```{r}
filter(flights, month == 1, day == 1) # For rows

slice(flights, 1:4) # For rows

arrange(flights, year, month, day) # Reorders rows

arrange(flights, desc(arr_delay)) |> select(arr_delay) # Reorders 'arr_delay
# as descending and this is then piped to select(), that filters the column.
# Some examples to use select():
select(flights, year:day)

select(flights, -(year:day)) # Columns you dont wanna see.

select(flights, tail_num = tailnum) # Renaming a column. Can also be done as
#rename(flights, tail_num = tailnum) |> select(year:day, tail_num)

mutate(flights, gain = arr_delay - dep_delay, speed = distance/air_time*60) |> select(arr_delay, dep_delay, distance, air_time, gain, speed) # Adding new cols that are functions of existing cols.

summarise(flights, delay = mean(dep_delay, na.rm = TRUE)) #By default collapses a df to a single row. 

sample_n(flights, 10) #Takes 10 random rows. 

sample_frac(flights, 0.01) #Takes 0.01 of the df randomly.
```

```{r}
# Grouped operation example:
by_tailnum <- group_by(flights, tailnum)

delay <- summarise(by_tailnum,
                   count = n(),
                   dist = mean(distance, na.rm = TRUE),
                   delay = mean(arr_delay, na.rm = TRUE))
delay <- filter(delay, count > 20, dist < 2000)
